"use strict";import{createCharacter as p,createCharacterClassRange as C}from"../../parser/parse.js";const y={CharacterClass({node:r}){if(r.kind!=="union"||!r.body.length)return;const n=[];for(const e of r.body)e.type==="CharacterSet"&&n.some(a=>a.type===e.type&&a.kind===e.kind&&a.negate===e.negate&&a.value===e.value)||n.push(e);r.body=n;const o=[],l=[];for(const e of r.body)e.type==="Character"||e.type==="CharacterClassRange"?l.push(e):o.push(e);if(!l.length)return;l.sort((e,a)=>{const t=e.type==="Character"?e.value:e.min.value,c=a.type==="Character"?a.value:a.min.value;return t-c});const s=[l[0]];for(let e=1;e<l.length;e++){const a=l[e],t=s.at(-1),c=a.type==="Character"?a.value:a.min.value,i=t.type==="Character"?t.value:t.max.value;if(c<=i+1)if(t.type==="Character"&&a.type==="Character")t.value!==a.value&&(s[s.length-1]=C(t,a));else if(t.type==="Character"&&a.type==="CharacterClassRange")s[s.length-1]=C(p(t.value),a.max);else if(t.type==="CharacterClassRange"&&a.type==="Character")t.max.value=Math.max(a.value,t.max.value);else if(t.type==="CharacterClassRange"&&a.type==="CharacterClassRange")t.max.value=Math.max(a.max.value,t.max.value);else throw new Error("Unexpected merge case");else s.push(a)}const h=s.flatMap(e=>{if(e.type==="CharacterClassRange"){const a=e.max.value-e.min.value;return a>1?e:a?[e.min,e.max]:e.min}return e});r.body=[...h.filter(e=>u(e)),...h.filter(e=>!u(e)),...o]}};function u(r){return r.type==="Character"&&(r.value===45||r.value===93)}export{y as mergeRanges};
//# sourceMappingURL=merge-ranges.js.map
